#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

import time
import subprocess
from pwn import *
context.log_level = 'debug'

# Byte sequence alias
A8 = 8 * b'A'

add_status = 2

class Player:
    def __init__(self, hp=0, atk=0, _def=0, money=0):
        self.hp = 0
        self.atk = 0
        self._def = 0
        self.money = 0


class Game:
    def __init__(self, ip, port):
        self.proc = remote(ip, port)
        self.login()
        self.load_game(True)
        self.loop()

    def login(self):
        self.proc.recvuntil('hashcash -mb24 ')
        seed = self.proc.recv(8).decode('utf-8')
        hashcash_token = subprocess.run(['hashcash', '-mb24', seed],
                                        capture_output=True).stdout.strip()

        log.info(hashcash_token)
        self.proc.recvuntil('hashcash token: ')
        self.proc.sendline(hashcash_token)


    def load_game(self, should_load):
        self.proc.recvuntil('Load save file?(y/n):')
        self.proc.sendline(b'n')


    def loop(self):
        global add_status
        for i in range(5):
            output = self.proc.recvuntil('option:')
            if b'Add ATK' in output:
                if add_status == 0:
                    self.proc.sendline(b'1')
                elif add_status == 1:
                    self.proc.sendline(b'2')
                else:  # add_status == 2
                    self.proc.sendline(b'3')

                add_status += 1
                add_status %= 3
                self.proc.recvuntil('option:')

            self.proc.sendline(b'2')

            self.proc.recvuntil('option:')
            self.proc.sendline(b'1')



def main():
    game = Game('203.66.14.26', 31337)
    game.proc.interactive()


if __name__ == '__main__':
    main()
